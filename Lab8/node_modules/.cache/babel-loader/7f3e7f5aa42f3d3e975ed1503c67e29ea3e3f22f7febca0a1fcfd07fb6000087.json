{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041F\\u0430\\u0440\\u0438 4 \\u043A\\u0443\\u0440\\u0441\\\\Frontend\\\\\\u041B\\u0430\\u0431\\u0430 \\u21167\\\\Lab7\\\\src\\\\DataListComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport fetchDataFromApi from './fetchDataFromApi';\nimport DataItemComponent from './DataItemComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataListComponent = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const apiKey = '196bc45aabe31f92312e2d3a5411366a';\n  const cities = ['Kyiv', 'London', 'Paris', 'New York', 'Tokyo']; // Додайте міста, які вас цікавлять\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = useCallback(async () => {\n    try {\n      const results = await Promise.all(cities.map(city => fetchDataFromApi(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`, apiKey)));\n      console.log(results);\n      setData(results);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setData([]);\n    }\n  }, [cities, apiKey]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Fetch Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), data.map((item, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(DataItemComponent, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n_s(DataListComponent, \"Jvz3JDHxUHXvXX0U6Ww8sb+RqXY=\");\n_c = DataListComponent;\nexport default DataListComponent;\nvar _c;\n$RefreshReg$(_c, \"DataListComponent\");","map":{"version":3,"names":["React","useState","useEffect","fetchDataFromApi","DataItemComponent","jsxDEV","_jsxDEV","DataListComponent","_s","data","setData","apiKey","cities","fetchData","useCallback","results","Promise","all","map","city","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Viktor/OneDrive/Рабочий стол/Пари 4 курс/Frontend/Лаба №7/Lab7/src/DataListComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport fetchDataFromApi from './fetchDataFromApi';\r\nimport DataItemComponent from './DataItemComponent';\r\n\r\nconst DataListComponent = () => {\r\n    const [data, setData] = useState([]);\r\n    const apiKey = '196bc45aabe31f92312e2d3a5411366a';\r\n    const cities = ['Kyiv', 'London', 'Paris', 'New York', 'Tokyo']; // Додайте міста, які вас цікавлять\r\n  \r\n    useEffect(() => {\r\n      fetchData();\r\n    }, []);\r\n  \r\n    const fetchData = useCallback(async () => {\r\n        try {\r\n          const results = await Promise.all(\r\n            cities.map((city) =>\r\n              fetchDataFromApi(\r\n                `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`,\r\n                apiKey\r\n              )\r\n            )\r\n          );\r\n          console.log(results);\r\n          setData(results);\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n          setData([]);\r\n        }\r\n      }, [cities, apiKey]);\r\n      \r\n      useEffect(() => {\r\n        fetchData();\r\n      }, [fetchData]);\r\n      \r\n  \r\n    return (\r\n      <div>\r\n        <h2>Weather Information</h2>\r\n        <button onClick={fetchData}>Fetch Weather</button>\r\n        {data.map((item, index) => (\r\n          <ul key={index}>\r\n            <DataItemComponent item={item} />\r\n          </ul>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default DataListComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMU,MAAM,GAAG,kCAAkC;EACjD,MAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;;EAEjEV,SAAS,CAAC,MAAM;IACdW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAGC,WAAW,CAAC,YAAY;IACtC,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC/BL,MAAM,CAACM,GAAG,CAAEC,IAAI,IACdhB,gBAAgB,CACb,qDAAoDgB,IAAK,UAASR,MAAO,eAAc,EACxFA,MACF,CACF,CACF,CAAC;MACDS,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;MACpBL,OAAO,CAACK,OAAO,CAAC;IAClB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CZ,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC,EAAE,CAACE,MAAM,EAAED,MAAM,CAAC,CAAC;EAEpBT,SAAS,CAAC,MAAM;IACdW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAGjB,oBACEP,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BrB,OAAA;MAAQsB,OAAO,EAAEf,SAAU;MAAAU,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDlB,IAAI,CAACS,GAAG,CAAC,CAACW,IAAI,EAAEC,KAAK,kBACpBxB,OAAA;MAAAiB,QAAA,eACEjB,OAAA,CAACF,iBAAiB;QAACyB,IAAI,EAAEA;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAD1BG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CA3CED,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AA6CvB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}