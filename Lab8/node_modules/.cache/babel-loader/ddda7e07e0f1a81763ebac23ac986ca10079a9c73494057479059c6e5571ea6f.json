{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041F\\u0430\\u0440\\u0438 4 \\u043A\\u0443\\u0440\\u0441\\\\Frontend\\\\\\u041B\\u0430\\u0431\\u0430 \\u21167\\\\Lab7\\\\src\\\\DataListComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport fetchDataFromApi from './fetchDataFromApi';\nimport DataItemComponent from './DataItemComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataListComponent = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const apiKey = '196bc45aabe31f92312e2d3a5411366a';\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=Kyiv&appid=${apiKey}&units=metric`;\n    try {\n      const result = await fetchDataFromApi(apiUrl, apiKey);\n      console.log('Fetched data:', result);\n      setData(result);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setData([]); // Set an empty array in case of an error\n    }\n  };\n\n  console.log('Data in component:', data); // Log data before rendering\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Fetch Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), Array.isArray(data) && data.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(DataItemComponent, {\n        item: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(DataListComponent, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = DataListComponent;\nexport default DataListComponent;\nvar _c;\n$RefreshReg$(_c, \"DataListComponent\");","map":{"version":3,"names":["React","useState","useEffect","fetchDataFromApi","DataItemComponent","jsxDEV","_jsxDEV","DataListComponent","_s","data","setData","apiKey","fetchData","apiUrl","result","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","isArray","length","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Viktor/OneDrive/Рабочий стол/Пари 4 курс/Frontend/Лаба №7/Lab7/src/DataListComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport fetchDataFromApi from './fetchDataFromApi';\r\nimport DataItemComponent from './DataItemComponent';\r\n\r\nconst DataListComponent = () => {\r\n  const [data, setData] = useState([]);\r\n  const apiKey = '196bc45aabe31f92312e2d3a5411366a';\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=Kyiv&appid=${apiKey}&units=metric`;\r\n    try {\r\n      const result = await fetchDataFromApi(apiUrl, apiKey);\r\n      console.log('Fetched data:', result);\r\n      setData(result);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setData([]); // Set an empty array in case of an error\r\n    }\r\n  };\r\n\r\n  console.log('Data in component:', data); // Log data before rendering\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather Information</h2>\r\n      <button onClick={fetchData}>Fetch Weather</button>\r\n      {Array.isArray(data) && data.length > 0 ? (\r\n        <ul>\r\n          {data.map((item, index) => (\r\n            <DataItemComponent key={index} item={item} />\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No data available</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DataListComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMU,MAAM,GAAG,kCAAkC;EAEjDT,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,MAAM,GAAI,gEAA+DF,MAAO,eAAc;IACpG,IAAI;MACF,MAAMG,MAAM,GAAG,MAAMX,gBAAgB,CAACU,MAAM,EAAEF,MAAM,CAAC;MACrDI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAAC;MACpCJ,OAAO,CAACI,MAAM,CAAC;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CP,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACf;EACF,CAAC;;EAEDK,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEP,IAAI,CAAC,CAAC,CAAC;;EAEzC,oBACEH,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BhB,OAAA;MAAQiB,OAAO,EAAEX,SAAU;MAAAM,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDE,KAAK,CAACC,OAAO,CAAChB,IAAI,CAAC,IAAIA,IAAI,CAACiB,MAAM,GAAG,CAAC,gBACrCpB,OAAA;MAAAY,QAAA,EACGT,IAAI,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBvB,OAAA,CAACF,iBAAiB;QAAawB,IAAI,EAAEA;MAAK,GAAlBC,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELhB,OAAA;MAAAY,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CArCID,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AAwCvB,eAAeA,iBAAiB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}