{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041F\\u0430\\u0440\\u0438 4 \\u043A\\u0443\\u0440\\u0441\\\\Frontend\\\\\\u041B\\u0430\\u0431\\u0430 \\u21167\\\\Lab7\\\\src\\\\DataListComponent.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport fetchDataFromApi from './fetchDataFromApi';\nimport DataItemComponent from './DataItemComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataListComponent = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [data, setData] = useState([]);\n  const apiKey = '196bc45aabe31f92312e2d3a5411366a';\n  const cities = ['Kyiv', 'London', 'Paris', 'New York', 'Tokyo']; // Додайте міста, які вас цікавлять\n\n  const fetchData = async () => {\n    _s();\n    try {\n      const promises = cities.map(async city => {\n        const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n        return await fetchDataFromApi(apiUrl, apiKey);\n      });\n      const results = await Promise.all(promises);\n      //   console.log(results);\n      setData(results);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setData([]);\n    }\n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n  };\n  _s(fetchData, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Fetch Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), data.map((item, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(DataItemComponent, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataListComponent, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = DataListComponent;\nexport default DataListComponent;\nvar _c;\n$RefreshReg$(_c, \"DataListComponent\");","map":{"version":3,"names":["React","useState","useEffect","fetchDataFromApi","DataItemComponent","jsxDEV","_jsxDEV","DataListComponent","_s2","_s","$RefreshSig$","data","setData","apiKey","cities","fetchData","promises","map","city","apiUrl","results","Promise","all","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Viktor/OneDrive/Рабочий стол/Пари 4 курс/Frontend/Лаба №7/Lab7/src/DataListComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport fetchDataFromApi from './fetchDataFromApi';\r\nimport DataItemComponent from './DataItemComponent';\r\n\r\nconst DataListComponent = () => {\r\n  const [data, setData] = useState([]);\r\n  const apiKey = '196bc45aabe31f92312e2d3a5411366a';\r\n  const cities = ['Kyiv', 'London', 'Paris', 'New York', 'Tokyo']; // Додайте міста, які вас цікавлять\r\n\r\n  \r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const promises = cities.map(async (city) => {\r\n        const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n        return await fetchDataFromApi(apiUrl, apiKey);\r\n      });\r\n\r\n      const results = await Promise.all(promises);\r\n    //   console.log(results);\r\n      setData(results);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setData([]);\r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n      }, [fetchData]);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Weather Information</h2>\r\n      <button onClick={fetchData}>Fetch Weather</button>\r\n      {data.map((item, index) => (\r\n        <ul key={index}>\r\n          <DataItemComponent item={item} />\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataListComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMY,MAAM,GAAG,kCAAkC;EACjD,MAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;;EAIjE,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAAAN,EAAA;IAC5B,IAAI;MACF,MAAMO,QAAQ,GAAGF,MAAM,CAACG,GAAG,CAAC,MAAOC,IAAI,IAAK;QAC1C,MAAMC,MAAM,GAAI,qDAAoDD,IAAK,UAASL,MAAO,eAAc;QACvG,OAAO,MAAMV,gBAAgB,CAACgB,MAAM,EAAEN,MAAM,CAAC;MAC/C,CAAC,CAAC;MAEF,MAAMO,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MAC7C;MACEJ,OAAO,CAACQ,OAAO,CAAC;IAClB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CX,OAAO,CAAC,EAAE,CAAC;IACb;IACAV,SAAS,CAAC,MAAM;MACZa,SAAS,CAAC,CAAC;IACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EACnB,CAAC;EAACN,EAAA,CAjBIM,SAAS;EAmBf,oBACET,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BvB,OAAA;MAAQwB,OAAO,EAAEf,SAAU;MAAAU,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDlB,IAAI,CAACM,GAAG,CAAC,CAACc,IAAI,EAAEC,KAAK,kBACpB1B,OAAA;MAAAmB,QAAA,eACEnB,OAAA,CAACF,iBAAiB;QAAC2B,IAAI,EAAEA;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAD1BG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,GAAA,CArCID,iBAAiB;AAAA0B,EAAA,GAAjB1B,iBAAiB;AAuCvB,eAAeA,iBAAiB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}