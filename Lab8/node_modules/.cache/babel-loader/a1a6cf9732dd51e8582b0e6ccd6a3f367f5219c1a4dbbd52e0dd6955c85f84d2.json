{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041F\\u0430\\u0440\\u0438 4 \\u043A\\u0443\\u0440\\u0441\\\\Frontend\\\\\\u041B\\u0430\\u0431\\u0430 \\u21167\\\\Lab7\\\\src\\\\DataListComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport fetchDataFromApi from './fetchDataFromApi';\nimport DataItemComponent from './DataItemComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataListComponent = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const apiKey = '196bc45aabe31f92312e2d3a5411366a';\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=Kyiv&appid=${apiKey}&units=metric`;\n    try {\n      const result = await fetchDataFromApi(apiUrl, apiKey);\n      console.log(result);\n      setData([result]); // Assuming result is a single object\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setData([]); // Set an empty array or handle it differently based on your requirements\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Fetch Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(DataItemComponent, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(DataListComponent, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = DataListComponent;\nexport default DataListComponent;\nvar _c;\n$RefreshReg$(_c, \"DataListComponent\");","map":{"version":3,"names":["React","useState","useEffect","fetchDataFromApi","DataItemComponent","jsxDEV","_jsxDEV","DataListComponent","_s","data","setData","apiKey","fetchData","apiUrl","result","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","id","_c","$RefreshReg$"],"sources":["C:/Users/Viktor/OneDrive/Рабочий стол/Пари 4 курс/Frontend/Лаба №7/Lab7/src/DataListComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport fetchDataFromApi from './fetchDataFromApi';\r\nimport DataItemComponent from './DataItemComponent';\r\n\r\nconst DataListComponent = () => {\r\n  const [data, setData] = useState([]);\r\n  const apiKey = '196bc45aabe31f92312e2d3a5411366a';\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=Kyiv&appid=${apiKey}&units=metric`;\r\n    try {\r\n      const result = await fetchDataFromApi(apiUrl, apiKey);\r\n      console.log(result);\r\n      setData([result]); // Assuming result is a single object\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setData([]); // Set an empty array or handle it differently based on your requirements\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather Information</h2>\r\n      <button onClick={fetchData}>Fetch Weather</button>\r\n      {data.map((item) => (\r\n        <ul key={item.id}>\r\n          <DataItemComponent item={item} />\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataListComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMU,MAAM,GAAG,kCAAkC;EAEjDT,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,MAAM,GAAI,gEAA+DF,MAAO,eAAc;IACpG,IAAI;MACF,MAAMG,MAAM,GAAG,MAAMX,gBAAgB,CAACU,MAAM,EAAEF,MAAM,CAAC;MACrDI,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBJ,OAAO,CAAC,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CP,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACf;EACF,CAAC;;EAED,oBACEJ,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BhB,OAAA;MAAQiB,OAAO,EAAEX,SAAU;MAAAM,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDb,IAAI,CAACe,GAAG,CAAEC,IAAI,iBACbnB,OAAA;MAAAY,QAAA,eACEZ,OAAA,CAACF,iBAAiB;QAACqB,IAAI,EAAEA;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAD1BG,IAAI,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CA/BID,iBAAiB;AAAAoB,EAAA,GAAjBpB,iBAAiB;AAiCvB,eAAeA,iBAAiB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}