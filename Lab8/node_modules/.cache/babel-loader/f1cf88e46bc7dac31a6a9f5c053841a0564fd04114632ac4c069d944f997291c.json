{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041F\\u0430\\u0440\\u0438 4 \\u043A\\u0443\\u0440\\u0441\\\\Frontend\\\\\\u041B\\u0430\\u0431\\u0430 \\u21167\\\\Lab7\\\\src\\\\DataListComponent.js\",\n  _s = $RefreshSig$();\n// DataListComponent.js\nimport React, { useState, useEffect } from 'react';\nimport fetchDataFromApi from './fetchDataFromApi';\nimport DataItemComponent from './DataItemComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataListComponent = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const apiKey = '196bc45aabe31f92312e2d3a5411366a';\n  const cities = ['Kyiv', 'London', 'Paris', 'New York', 'Tokyo'];\n  const fetchData = async () => {\n    try {\n      const results = await Promise.all(cities.map(city => fetchDataFromApi(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`, apiKey)));\n      console.log(results);\n      setData(results);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setData([]);\n    }\n  };\n  useEffect(() => {\n    fetchData(); // Додано fetchData до залежностей\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchData(),\n      children: \"Fetch Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \" \", data.map((item, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(DataItemComponent, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(DataListComponent, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = DataListComponent;\nexport default DataListComponent;\nvar _c;\n$RefreshReg$(_c, \"DataListComponent\");","map":{"version":3,"names":["React","useState","useEffect","fetchDataFromApi","DataItemComponent","jsxDEV","_jsxDEV","DataListComponent","_s","data","setData","apiKey","cities","fetchData","results","Promise","all","map","city","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","item","index","_c","$RefreshReg$"],"sources":["C:/Users/Viktor/OneDrive/Рабочий стол/Пари 4 курс/Frontend/Лаба №7/Lab7/src/DataListComponent.js"],"sourcesContent":["// DataListComponent.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport fetchDataFromApi from './fetchDataFromApi';\r\nimport DataItemComponent from './DataItemComponent';\r\n\r\nconst DataListComponent = () => {\r\n  const [data, setData] = useState([]);\r\n  const apiKey = '196bc45aabe31f92312e2d3a5411366a';\r\n  const cities = ['Kyiv', 'London', 'Paris', 'New York', 'Tokyo'];\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const results = await Promise.all(\r\n        cities.map((city) =>\r\n          fetchDataFromApi(\r\n            `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`,\r\n            apiKey\r\n          )\r\n        )\r\n      );\r\n      console.log(results);\r\n      setData(results);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setData([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Додано fetchData до залежностей\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather Information</h2>\r\n      <button onClick={() => fetchData()}>Fetch Weather</button> {/* Оновлено виклик функції */}\r\n      {data.map((item, index) => (\r\n        <ul key={index}>\r\n          <DataItemComponent item={item} />\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataListComponent;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMU,MAAM,GAAG,kCAAkC;EACjD,MAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC;EAE/D,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC/BJ,MAAM,CAACK,GAAG,CAAEC,IAAI,IACdf,gBAAgB,CACb,qDAAoDe,IAAK,UAASP,MAAO,eAAc,EACxFA,MACF,CACF,CACF,CAAC;MACDQ,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;MACpBJ,OAAO,CAACI,OAAO,CAAC;IAClB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CX,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdW,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACEP,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BpB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMd,SAAS,CAAC,CAAE;MAAAS,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,EAC1DjB,IAAI,CAACQ,GAAG,CAAC,CAACW,IAAI,EAAEC,KAAK,kBACpBvB,OAAA;MAAAgB,QAAA,eACEhB,OAAA,CAACF,iBAAiB;QAACwB,IAAI,EAAEA;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAD1BG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtCID,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AAwCvB,eAAeA,iBAAiB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}